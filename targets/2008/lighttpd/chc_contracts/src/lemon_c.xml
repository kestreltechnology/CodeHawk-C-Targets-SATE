<?xml version="1.0" encoding="UTF-8"?>
<c-analysis>
  <header info="cfile" name="cfile" time="2020-02-20 13:58:34.517777"/>
  <cfile name="src/lemon">
    <data-structures/>
    <global-variables>
      <gvar name="argv"/>
      <gvar name="errstream"/>
      <gvar name="global_size"/>
      <gvar name="op"/>
      <gvar name="x1a"/>
      <gvar name="x2a"/>
      <gvar name="x3a"/>
      <gvar name="x4a"/>
    </global-variables>
    <functions>
      <function name="Action_add">
        <parameters>
          <par name="app" nr="1"/>
          <par name="type" nr="2"/>
          <par name="sp" nr="3"/>
          <par name="arg" nr="4"/>
        </parameters>
	<postconditions>
	  <post>
	    <math>
	      <apply>
		<preserves-all-memory/>
	      </apply>
	    </math>
	  </post>
	</postconditions>
      </function>
      <function name="Action_new">
        <parameters/>
	<postconditions>
	  <post>
	    <math>
	      <apply>
		<not-null/>
		<return/>
	      </apply>
	    </math>
	  </post>
	  <post>
	    <math>
	      <apply>
		<preserves-all-memory/>
	      </apply>
	    </math>
	  </post>
	</postconditions>
      </function>
      <function name="Action_sort">
        <parameters>
          <par name="ap" nr="1"/>
        </parameters>
	<postconditions>
	  <post>
	    <math>
	      <apply>
		<preserves-all-memory/>
	      </apply>
	    </math>
	  </post>
	</postconditions>
      </function>
      <function name="CompressTables">
        <parameters>
          <par name="lemp" nr="1"/>
        </parameters>
      </function>
      <function name="ConfigPrint">
        <parameters>
          <par name="fp" nr="1"/>
          <par name="cfp" nr="2"/>
        </parameters>
	<postconditions>
	  <post>
	    <math>
	      <apply>
		<preserves-all-memory/>
	      </apply>
	    </math>
	  </post>
	</postconditions>
      </function>
      <function name="Configcmp">
        <parameters>
          <par name="a" nr="1"/>
          <par name="b" nr="2"/>
        </parameters>
	<postconditions>
	  <post>
	    <math>
	      <apply>
		<preserves-all-memory/>
	      </apply>
	    </math>
	  </post>
	</postconditions>
      </function>
      <function name="Configlist_add">
        <parameters>
          <par name="rp" nr="1"/>
          <par name="dot" nr="2"/>
        </parameters>
	<postconditions>
	  <post>
	    <math>
	      <apply>
		<not-null/>
		<return/>
	      </apply>
	    </math>
	  </post>
	  <post>
	    <math>
	      <apply>
		<initialized/>
		<apply>
		  <addressed-value>
		    <field name="fws"/>
		  </addressed-value>
		  <return/>
		</apply>
	      </apply>
	    </math>
	  </post>
	</postconditions>
      </function>
      <function name="Configlist_addbasis">
        <parameters>
          <par name="rp" nr="1"/>
          <par name="dot" nr="2"/>
        </parameters>
	<postconditions>
	  <post>
	    <math>
	      <apply>
		<not-null/>
		<return/>
	      </apply>
	    </math>
	  </post>
	  <post>
	    <math>
	      <apply>
		<initialized/>
		<apply>
		  <addressed-value>
		    <field name="fws"/>
		  </addressed-value>
		  <return/>
		</apply>
	      </apply>
	    </math>
	  </post>
	</postconditions>
      </function>
      <function name="Configlist_basis">
        <parameters/>
	<postconditions>
	  <post>
	    <math>
	      <apply>
		<preserves-all-memory/>
	      </apply>
	    </math>
	  </post>
	</postconditions>
      </function>
      <function name="Configlist_closure">
        <parameters>
          <par name="lemp" nr="1"/>
        </parameters>
      </function>
      <function name="Configlist_eat">
        <parameters>
          <par name="cfp" nr="1"/>
        </parameters>
      </function>
      <function name="Configlist_init">
        <parameters/>
      </function>
      <function name="Configlist_reset">
        <parameters/>
      </function>
      <function name="Configlist_return">
        <parameters/>
	<postconditions>
	  <post>
	    <math>
	      <apply>
		<preserves-all-memory/>
	      </apply>
	    </math>
	  </post>
	</postconditions>
      </function>
      <function name="Configlist_sort">
        <parameters/>
	<postconditions>
	  <post>
	    <math>
	      <apply>
		<preserves-all-memory/>
	      </apply>
	    </math>
	  </post>
	</postconditions>
      </function>
      <function name="Configlist_sortbasis">
        <parameters/>
	<postconditions>
	  <post>
	    <math>
	      <apply>
		<preserves-all-memory/>
	      </apply>
	    </math>
	  </post>
	</postconditions>
      </function>
      <function name="Configtable_clear">
        <parameters>
          <par name="f" nr="1"/>
        </parameters>
	<preconditions>
	  <pre>
	    <math>
	      <apply>
		<valid-mem/>
		<ci>x4a</ci>
	      </apply>
	    </math>
	  </pre>
	  <pre>
	    <math>
	      <apply>
		<initialized/>
		<apply>
		  <addressed-value>
		    <field name="count"/>
		  </addressed-value>
		  <ci>x4a</ci>
		</apply>
	      </apply>
	    </math>
	  </pre>
	  <pre>
	    <math>
	      <apply>
		<initialized/>
		<apply>
		  <addressed-value>
		    <field name="ht"/>
		  </addressed-value>
		  <ci>x4a</ci>
		</apply>
	      </apply>
	    </math>
	  </pre>
	  <pre>
	    <math>
	      <apply>
		<initialized/>
		<apply>
		  <addressed-value>
		    <field name="size"/>
		  </addressed-value>
		  <ci>x4a</ci>
		</apply>
	      </apply>
	    </math>
	  </pre>
	  <pre>
	    <math>
	      <apply>
		<initialized/>
		<apply>
		  <addressed-value>
		    <field name="tbl"/>
		  </addressed-value>
		  <ci>x4a</ci>
		</apply>
	      </apply>
	    </math>
	  </pre>
	</preconditions>
      </function>
      <function name="Configtable_find">
        <parameters>
          <par name="key" nr="1"/>
        </parameters>
	<preconditions>
	  <pre>
	    <math>
	      <apply>
		<valid-mem/>
		<ci>x4a</ci>
	      </apply>
	    </math>
	  </pre>
	  <pre>
	    <math>
	      <apply>
		<initialized/>
		<apply>
		  <addressed-value>
		    <field name="ht"/>
		  </addressed-value>
		  <ci>x4a</ci>
		</apply>
	      </apply>
	    </math>
	  </pre>
	  <pre>
	    <math>
	      <apply>
		<initialized/>
		<apply>
		  <addressed-value>
		    <field name="size"/>
		  </addressed-value>
		  <ci>x4a</ci>
		</apply>
	      </apply>
	    </math>
	  </pre>
	</preconditions>
	<postconditions>
	  <post>
	    <math>
	      <apply>
		<preserves-all-memory/>
	      </apply>
	    </math>
	  </post>
	</postconditions>
      </function>
      <function name="Configtable_init">
        <parameters/>
      </function>
      <function name="Configtable_insert">
        <parameters>
          <par name="data" nr="1"/>
        </parameters>
	<preconditions>
	  <pre>
	    <math>
	      <apply>
		<valid-mem/>
		<ci>x4a</ci>
	      </apply>
	    </math>
	  </pre>
	  <pre>
	    <math>
	      <apply>
		<initialized/>
		<apply>
		  <addressed-value>
		    <field name="count"/>
		  </addressed-value>
		  <ci>x4a</ci>
		</apply>
	      </apply>
	    </math>
	  </pre>
	  <pre>
	    <math>
	      <apply>
		<initialized/>
		<apply>
		  <addressed-value>
		    <field name="ht"/>
		  </addressed-value>
		  <ci>x4a</ci>
		</apply>
	      </apply>
	    </math>
	  </pre>
	  <pre>
	    <math>
	      <apply>
		<initialized/>
		<apply>
		  <addressed-value>
		    <field name="size"/>
		  </addressed-value>
		  <ci>x4a</ci>
		</apply>
	      </apply>
	    </math>
	  </pre>
	  <pre>
	    <math>
	      <apply>
		<initialized/>
		<apply>
		  <addressed-value>
		    <field name="tbl"/>
		  </addressed-value>
		  <ci>x4a</ci>
		</apply>
	      </apply>
	    </math>
	  </pre>
	</preconditions>
      </function>
      <function name="ErrorMsg">
        <parameters>
          <par name="filename" nr="1"/>
          <par name="lineno" nr="2"/>
          <par name="format" nr="3"/>
        </parameters>
	<postconditions>
	  <post>
	    <math>
	      <apply>
		<preserves-all-memory/>
	      </apply>
	    </math>
	  </post>
	</postconditions>
      </function>
      <function name="FindActions">
        <parameters>
          <par name="lemp" nr="1"/>
        </parameters>
	<postconditions>
	  <post>
	    <math>
	      <apply>
		<preserves-all-memory/>
	      </apply>
	    </math>
	  </post>
	</postconditions>
      </function>
      <function name="FindFirstSets">
        <parameters>
          <par name="lemp" nr="1"/>
        </parameters>
	<postconditions>
	  <post>
	    <math>
	      <apply>
		<preserves-all-memory/>
	      </apply>
	    </math>
	  </post>
	</postconditions>
      </function>
      <function name="FindFollowSets">
        <parameters>
          <par name="lemp" nr="1"/>
        </parameters>
	<postconditions>
	  <post>
	    <math>
	      <apply>
		<preserves-all-memory/>
	      </apply>
	    </math>
	  </post>
	</postconditions>
      </function>
      <function name="FindLinks">
        <parameters>
          <par name="lemp" nr="1"/>
        </parameters>
	<postconditions>
	  <post>
	    <math>
	      <apply>
		<preserves-all-memory/>
	      </apply>
	    </math>
	  </post>
	</postconditions>
      </function>
      <function name="FindRulePrecedences">
        <parameters>
          <par name="xp" nr="1"/>
        </parameters>
	<postconditions>
	  <post>
	    <math>
	      <apply>
		<preserves-all-memory/>
	      </apply>
	    </math>
	  </post>
	</postconditions>
      </function>
      <function name="FindStates">
        <parameters>
          <par name="lemp" nr="1"/>
        </parameters>
      </function>
      <function name="OptArg">
        <parameters>
          <par name="n" nr="1"/>
        </parameters>
	  <preconditions>
	    <pre>
	      <math>
		<apply>
		  <not-null/>
		  <ci>argv</ci>
		</apply>
	      </math>
	    </pre>
	    <pre>
	      <math>
		<apply>
		  <valid-mem/>
		  <ci>argv</ci>
		</apply>
	      </math>
	    </pre>
	  </preconditions>
	<postconditions>
	  <post>
	    <math>
	      <apply>
		<preserves-all-memory/>
	      </apply>
	    </math>
	  </post>
	</postconditions>
      </function>
      <function name="OptErr">
        <parameters>
          <par name="n" nr="1"/>
        </parameters>
	  <preconditions>
	    <pre>
	      <math>
		<apply>
		  <not-null/>
		  <ci>argv</ci>
		</apply>
	      </math>
	    </pre>
	    <pre>
	      <math>
		<apply>
		  <valid-mem/>
		  <ci>argv</ci>
		</apply>
	      </math>
	    </pre>
	  </preconditions>
      </function>
      <function name="OptInit">
        <parameters>
          <par name="a" nr="1"/>
          <par name="o" nr="2"/>
          <par name="err" nr="3"/>
        </parameters>
	<postconditions>
	  <post>
	    <math>
	      <apply>
		<preserves-all-memory/>
	      </apply>
	    </math>
	  </post>
	</postconditions>
      </function>
      <function name="OptNArgs">
        <parameters/>
	<preconditions>
	  <pre>
	    <math>
	      <apply>
		<not-null/>
		<ci>argv</ci>
	      </apply>
	    </math>
	  </pre>
	  <pre>
	    <math>
	      <apply>
		<valid-mem/>
		<ci>argv</ci>
	      </apply>
	    </math>
	  </pre>
	</preconditions>
	<postconditions>	  
	  <post>
	    <math>
	      <apply>
		<preserves-all-memory/>
	      </apply>
	    </math>
	  </post>
	</postconditions>
      </function>
      <function name="OptPrint">
        <parameters/>
	<preconditions>
	  <pre>
	    <math>
	      <apply>
		<not-null/>
		<ci>errstream</ci>
	      </apply>
	    </math>
	  </pre>
	  <pre>
	    <math>
	      <apply>
		<valid-mem/>
		<ci>errstream</ci>
	      </apply>
	    </math>
	  </pre>
	  <pre>
	    <math>
	      <apply>
		<not-null/>
		<ci>op</ci>
	      </apply>
	    </math>
	  </pre>
	  <pre>
	    <math>
	      <apply>
		<valid-mem/>
		<ci>op</ci>
	      </apply>
	    </math>
	  </pre>
	</preconditions>
      </function>
      <function name="Parse">
        <parameters>
          <par name="gp" nr="1"/>
        </parameters>
      </function>
      <function name="Plink_add">
        <parameters>
          <par name="plpp" nr="1"/>
          <par name="cfp" nr="2"/>
        </parameters>
	<postconditions>
	  <post>
	    <math>
	      <apply>
		<preserves-all-memory/>
	      </apply>
	    </math>
	  </post>
	</postconditions>
      </function>
      <function name="Plink_copy">
        <parameters>
          <par name="to" nr="1"/>
          <par name="from" nr="2"/>
        </parameters>
      </function>
      <function name="Plink_delete">
        <parameters>
          <par name="plp" nr="1"/>
        </parameters>
      </function>
      <function name="Plink_new">
        <parameters/>
	<postconditions>
	  <post>
	    <math>
	      <apply>
		<not-null/>
		<return/>
	      </apply>
	    </math>
	  </post>
	  <post>
	    <math>
	      <apply>
		<preserves-all-memory/>
	      </apply>
	    </math>
	  </post>
	</postconditions>
      </function>
      <function name="PrintAction">
        <parameters>
          <par name="ap" nr="1"/>
          <par name="fp" nr="2"/>
          <par name="indent" nr="3"/>
        </parameters>
	<postconditions>
	  <post>
	    <math>
	      <apply>
		<preserves-all-memory/>
	      </apply>
	    </math>
	  </post>
	</postconditions>
      </function>
      <function name="ReportHeader">
        <parameters>
          <par name="lemp" nr="1"/>
        </parameters>
      </function>
      <function name="ReportOutput">
        <parameters>
          <par name="lemp" nr="1"/>
        </parameters>
      </function>
      <function name="ReportTable">
        <parameters>
          <par name="lemp" nr="1"/>
          <par name="mhflag___0" nr="2"/>
        </parameters>
      </function>
      <function name="Reprint">
        <parameters>
          <par name="lemp" nr="1"/>
        </parameters>
      </function>
      <function name="SetAdd">
        <parameters>
          <par name="s" nr="1"/>
          <par name="e" nr="2"/>
        </parameters>
	<postconditions>
	  <post>
	    <math>
	      <apply>
		<preserves-all-memory/>
	      </apply>
	    </math>
	  </post>
	</postconditions>
      </function>
      <function name="SetFree">
        <parameters>
          <par name="s" nr="1"/>
        </parameters>
      </function>
      <function name="SetNew">
        <parameters/>
	<preconditions>
	  <pre>
	    <math>
	      <apply>
		<geq/>
		<ci>global_size</ci>
		<cn>0</cn>
	      </apply>
	    </math>
	  </pre>
	</preconditions>
	<postconditions>	  
	  <post>
	    <math>
	      <apply>
		<preserves-all-memory/>
	      </apply>
	    </math>
	  </post>
	</postconditions>
      </function>
      <function name="SetSize">
        <parameters>
          <par name="n" nr="1"/>
        </parameters>
	<postconditions>
	  <post>
	    <math>
	      <apply>
		<preserves-all-memory/>
	      </apply>
	    </math>
	  </post>
	</postconditions>
      </function>
      <function name="SetUnion">
        <parameters>
          <par name="s1" nr="1"/>
          <par name="s2" nr="2"/>
        </parameters>
	<postconditions>
	  <post>
	    <math>
	      <apply>
		<preserves-all-memory/>
	      </apply>
	    </math>
	  </post>
	</postconditions>
      </function>
      <function name="State_arrayof">
        <parameters/>
	<preconditions>
	  <pre>
	    <math>
	      <apply>
		<valid-mem/>
		<ci>x3a</ci>
	      </apply>
	    </math>
	  </pre>
	  <pre>
	    <math>
	      <apply>
		<initialized/>
		<apply>
		  <addressed-value>
		    <field name="count"/>
		  </addressed-value>
		  <ci>x3a</ci>
		</apply>
	      </apply>
	    </math>
	  </pre>
	  <pre>
	    <math>
	      <apply>
		<initialized/>
		<apply>
		  <addressed-value>
		    <field name="tbl"/>
		  </addressed-value>
		  <ci>x3a</ci>
		</apply>
	      </apply>
	    </math>
	  </pre>
	</preconditions>
	<postconditions>
	  <post>
	    <math>
	      <apply>
		<preserves-all-memory/>
	      </apply>
	    </math>
	  </post>
	</postconditions>
      </function>
      <function name="State_find">
        <parameters>
          <par name="key" nr="1"/>
        </parameters>
	<preconditions>
	  <pre>
	    <math>
	      <apply>
		<valid-mem/>
		<ci>x3a</ci>
	      </apply>
	    </math>
	  </pre>
	  <pre>
	    <math>
	      <apply>
		<initialized/>
		<apply>
		  <addressed-value>
		    <field name="ht"/>
		  </addressed-value>
		  <ci>x3a</ci>
		</apply>
	      </apply>
	    </math>
	  </pre>
	  <pre>
	    <math>
	      <apply>
		<initialized/>
		<apply>
		  <addressed-value>
		    <field name="size"/>
		  </addressed-value>
		  <ci>x3a</ci>
		</apply>
	      </apply>
	    </math>
	  </pre>
	</preconditions>
	<postconditions>
	  <post>
	    <math>
	      <apply>
		<preserves-all-memory/>
	      </apply>
	    </math>
	  </post>
	</postconditions>
      </function>
      <function name="State_init">
        <parameters/>
      </function>
      <function name="State_insert">
        <parameters>
          <par name="data" nr="1"/>
          <par name="key" nr="2"/>
        </parameters>
	<preconditions>
	  <pre>
	    <math>
	      <apply>
		<valid-mem/>
		<ci>x3a</ci>
	      </apply>
	    </math>
	  </pre>
	  <pre>
	    <math>
	      <apply>
		<initialized/>
		<apply>
		  <addressed-value>
		    <field name="count"/>
		  </addressed-value>
		  <ci>x3a</ci>
		</apply>
	      </apply>
	    </math>
	  </pre>
	  <pre>
	    <math>
	      <apply>
		<initialized/>
		<apply>
		  <addressed-value>
		    <field name="ht"/>
		  </addressed-value>
		  <ci>x3a</ci>
		</apply>
	      </apply>
	    </math>
	  </pre>
	  <pre>
	    <math>
	      <apply>
		<initialized/>
		<apply>
		  <addressed-value>
		    <field name="size"/>
		  </addressed-value>
		  <ci>x3a</ci>
		</apply>
	      </apply>
	    </math>
	  </pre>
	  <pre>
	    <math>
	      <apply>
		<initialized/>
		<apply>
		  <addressed-value>
		    <field name="tbl"/>
		  </addressed-value>
		  <ci>x3a</ci>
		</apply>
	      </apply>
	    </math>
	  </pre>
	</preconditions>
      </function>
      <function name="State_new">
        <parameters/>
	<postconditions>
	  <post>
	    <math>
	      <apply>
		<not-null/>
		<return/>
	      </apply>
	    </math>
	  </post>
	  <post>
	    <math>
	      <apply>
		<preserves-all-memory/>
	      </apply>
	    </math>
	  </post>
	</postconditions>
      </function>
      <function name="Strsafe">
        <parameters>
          <par name="y" nr="1"/>
        </parameters>
	<postconditions>
	  <post>
	    <math>
	      <apply>
		<not-null/>
		<return/>
	      </apply>
	    </math>
	  </post>
	</postconditions>
      </function>
      <function name="Strsafe_find">
        <parameters>
          <par name="key" nr="1"/>
        </parameters>
	<preconditions>
	  <pre>
	    <math>
	      <apply>
		<valid-mem/>
		<ci>x1a</ci>
	      </apply>
	    </math>
	  </pre>
	  <pre>
	    <math>
	      <apply>
		<initialized/>
		<apply>
		  <addressed-value>
		    <field name="ht"/>
		  </addressed-value>
		  <ci>x1a</ci>
		</apply>
	      </apply>
	    </math>
	  </pre>
	  <pre>
	    <math>
	      <apply>
		<initialized/>
		<apply>
		  <addressed-value>
		    <field name="size"/>
		  </addressed-value>
		  <ci>x1a</ci>
		</apply>
	      </apply>
	    </math>
	  </pre>
	</preconditions>
	<postconditions>
	  <post>
	    <math>
	      <apply>
		<preserves-all-memory/>
	      </apply>
	    </math>
	  </post>
	</postconditions>
      </function>
      <function name="Strsafe_init">
        <parameters/>
      </function>
      <function name="Strsafe_insert">
        <parameters>
          <par name="data" nr="1"/>
        </parameters>
	<preconditions>
	  <pre>
	    <math>
	      <apply>
		<valid-mem/>
		<ci>x1a</ci>
	      </apply>
	    </math>
	  </pre>
	  <pre>
	    <math>
	      <apply>
		<initialized/>
		<apply>
		  <addressed-value>
		    <field name="count"/>
		  </addressed-value>
		  <ci>x1a</ci>
		</apply>
	      </apply>
	    </math>
	  </pre>
	  <pre>
	    <math>
	      <apply>
		<initialized/>
		<apply>
		  <addressed-value>
		    <field name="ht"/>
		  </addressed-value>
		  <ci>x1a</ci>
		</apply>
	      </apply>
	    </math>
	  </pre>
	  <pre>
	    <math>
	      <apply>
		<initialized/>
		<apply>
		  <addressed-value>
		    <field name="size"/>
		  </addressed-value>
		  <ci>x1a</ci>
		</apply>
	      </apply>
	    </math>
	  </pre>
	  <pre>
	    <math>
	      <apply>
		<initialized/>
		<apply>
		  <addressed-value>
		    <field name="tbl"/>
		  </addressed-value>
		  <ci>x1a</ci>
		</apply>
	      </apply>
	    </math>
	  </pre>
	</preconditions>
      </function>
      <function name="Symbol_Nth">
        <parameters>
          <par name="n" nr="1"/>
        </parameters>
	<preconditions>
	  <pre>
	    <math>
	      <apply>
		<valid-mem/>
		<ci>x2a</ci>
	      </apply>
	    </math>
	  </pre>
	  <pre>
	    <math>
	      <apply>
		<initialized/>
		<apply>
		  <addressed-value>
		    <field name="count"/>
		  </addressed-value>
		  <ci>x2a</ci>
		</apply>
	      </apply>
	    </math>
	  </pre>
	  <pre>
	    <math>
	      <apply>
		<initialized/>
		<apply>
		  <addressed-value>
		    <field name="tbl"/>
		  </addressed-value>
		  <ci>x2a</ci>
		</apply>
	      </apply>
	    </math>
	  </pre>
	</preconditions>
      </function>
      <function name="Symbol_arrayof">
        <parameters/>
	<preconditions>
	  <pre>
	    <math>
	      <apply>
		<valid-mem/>
		<ci>x2a</ci>
	      </apply>
	    </math>
	  </pre>
	  <pre>
	    <math>
	      <apply>
		<initialized/>
		<apply>
		  <addressed-value>
		    <field name="count"/>
		  </addressed-value>
		  <ci>x2a</ci>
		</apply>
	      </apply>
	    </math>
	  </pre>
	  <pre>
	    <math>
	      <apply>
		<initialized/>
		<apply>
		  <addressed-value>
		    <field name="tbl"/>
		  </addressed-value>
		  <ci>x2a</ci>
		</apply>
	      </apply>
	    </math>
	  </pre>
	</preconditions>
	<postconditions>
	  <post>
	    <math>
	      <apply>
		<preserves-all-memory/>
	      </apply>
	    </math>
	  </post>
	</postconditions>
      </function>
      <function name="Symbol_count">
        <parameters/>
	<preconditions>
	  <pre>
	    <math>
	      <apply>
		<valid-mem/>
		<ci>x2a</ci>
	      </apply>
	    </math>
	  </pre>
	  <pre>
	    <math>
	      <apply>
		<initialized/>
		<apply>
		  <addressed-value>
		    <field name="count"/>
		  </addressed-value>
		  <ci>x2a</ci>
		</apply>
	      </apply>
	    </math>
	  </pre>
	</preconditions>
	<postconditions>
	  <post>
	    <math>
	      <apply>
		<preserves-all-memory/>
	      </apply>
	    </math>
	  </post>
	</postconditions>
      </function>
      <function name="Symbol_find">
        <parameters>
          <par name="key" nr="1"/>
        </parameters>
	<preconditions>
	  <pre>
	    <math>
	      <apply>
		<valid-mem/>
		<ci>x2a</ci>
	      </apply>
	    </math>
	  </pre>
	  <pre>
	    <math>
	      <apply>
		<initialized/>
		<apply>
		  <addressed-value>
		    <field name="ht"/>
		  </addressed-value>
		  <ci>x2a</ci>
		</apply>
	      </apply>
	    </math>
	  </pre>
	  <pre>
	    <math>
	      <apply>
		<initialized/>
		<apply>
		  <addressed-value>
		    <field name="size"/>
		  </addressed-value>
		  <ci>x2a</ci>
		</apply>
	      </apply>
	    </math>
	  </pre>
	</preconditions>
	<postconditions>
	  <post>
	    <math>
	      <apply>
		<preserves-all-memory/>
	      </apply>
	    </math>
	  </post>
	</postconditions>
      </function>
      <function name="Symbol_init">
        <parameters/>
      </function>
      <function name="Symbol_insert">
        <parameters>
          <par name="data" nr="1"/>
          <par name="key" nr="2"/>
        </parameters>
	<preconditions>
	  <pre>
	    <math>
	      <apply>
		<valid-mem/>
		<ci>x2a</ci>
	      </apply>
	    </math>
	  </pre>
	  <pre>
	    <math>
	      <apply>
		<initialized/>
		<apply>
		  <addressed-value>
		    <field name="count"/>
		  </addressed-value>
		  <ci>x2a</ci>
		</apply>
	      </apply>
	    </math>
	  </pre>
	  <pre>
	    <math>
	      <apply>
		<initialized/>
		<apply>
		  <addressed-value>
		    <field name="ht"/>
		  </addressed-value>
		  <ci>x2a</ci>
		</apply>
	      </apply>
	    </math>
	  </pre>
	  <pre>
	    <math>
	      <apply>
		<initialized/>
		<apply>
		  <addressed-value>
		    <field name="size"/>
		  </addressed-value>
		  <ci>x2a</ci>
		</apply>
	      </apply>
	    </math>
	  </pre>
	  <pre>
	    <math>
	      <apply>
		<initialized/>
		<apply>
		  <addressed-value>
		    <field name="tbl"/>
		  </addressed-value>
		  <ci>x2a</ci>
		</apply>
	      </apply>
	    </math>
	  </pre>
	</preconditions>
      </function>
      <function name="Symbol_new">
        <parameters>
          <par name="x" nr="1"/>
        </parameters>
	<postconditions>
	  <post>
	    <math>
	      <apply>
		<not-null/>
		<return/>
	      </apply>
	    </math>
	  </post>
	  <post>
	    <math>
	      <apply>
		<initialized/>
		<apply>
		  <addressed-value>
		    <field name="fallback"/>
		  </addressed-value>
		  <return/>
		</apply>
	      </apply>
	    </math>
	  </post>
	  <post>
	    <math>
	      <apply>
		<initialized/>
		<apply>
		  <addressed-value>
		    <field name="prec"/>
		  </addressed-value>
		  <return/>
		</apply>
	      </apply>
	    </math>
	  </post>
	</postconditions>
      </function>
      <function name="Symbolcmpp">
        <parameters>
          <par name="a" nr="1"/>
          <par name="b" nr="2"/>
        </parameters>
      </function>
      <function name="actioncmp">
        <parameters>
          <par name="ap1" nr="1"/>
          <par name="ap2" nr="2"/>
        </parameters>
      </function>
      <function name="acttab_action">
        <parameters>
          <par name="p" nr="1"/>
          <par name="lookahead" nr="2"/>
          <par name="action" nr="3"/>
        </parameters>
      </function>
      <function name="acttab_alloc">
        <parameters/>
	<postconditions>
	  <post>
	    <math>
	      <apply>
		<not-null/>
		<return/>
	      </apply>
	    </math>
	  </post>
	  <post>
	    <math>
	      <apply>
		<preserves-all-memory/>
	      </apply>
	    </math>
	  </post>
	</postconditions>
      </function>
      <function name="acttab_free">
        <parameters>
          <par name="p" nr="1"/>
        </parameters>
      </function>
      <function name="acttab_insert">
        <parameters>
          <par name="p" nr="1"/>
        </parameters>
      </function>
      <function name="argindex">
        <parameters>
          <par name="n" nr="1"/>
        </parameters>
	<preconditions>
	  <pre>
	    <math>
	      <apply>
		<not-null/>
		<ci>argv</ci>
	      </apply>
	    </math>
	  </pre>
	  <pre>
	    <math>
	      <apply>
		<valid-mem/>
		<ci>argv</ci>
	      </apply>
	    </math>
	  </pre>
	  <pre>
	    <math>
	      <apply>
		<initialized/>
		<apply>
		  <addressed-value/>
		  <ci>argv</ci>
		</apply>
	      </apply>
	    </math>
	  </pre>
	</preconditions>
      </function>
      <function name="axset_compare">
        <parameters>
          <par name="a" nr="1"/>
          <par name="b" nr="2"/>
        </parameters>
      </function>
      <function name="buildshifts">
        <parameters>
          <par name="lemp" nr="1"/>
          <par name="stp" nr="2"/>
        </parameters>
      </function>
      <function name="compute_action">
        <parameters>
          <par name="lemp" nr="1"/>
          <par name="ap" nr="2"/>
        </parameters>
	<postconditions>
	  <post>
	    <math>
	      <apply>
		<preserves-all-memory/>
	      </apply>
	    </math>
	  </post>
	</postconditions>
      </function>
      <function name="confighash">
        <parameters>
          <par name="a" nr="1"/>
        </parameters>
	<postconditions>
	  <post>
	    <math>
	      <apply>
		<preserves-all-memory/>
	      </apply>
	    </math>
	  </post>
	</postconditions>
      </function>
      <function name="deleteconfig">
        <parameters>
          <par name="old" nr="1"/>
        </parameters>
      </function>
      <function name="emit_code">
        <parameters>
          <par name="out" nr="1"/>
          <par name="rp" nr="2"/>
          <par name="lemp" nr="3"/>
          <par name="lineno" nr="4"/>
        </parameters>
	<postconditions>
	  <post>
	    <math>
	      <apply>
		<preserves-all-memory/>
	      </apply>
	    </math>
	  </post>
	</postconditions>
      </function>
      <function name="emit_destructor_code">
        <parameters>
          <par name="out" nr="1"/>
          <par name="sp" nr="2"/>
          <par name="lemp" nr="3"/>
          <par name="lineno" nr="4"/>
        </parameters>
	<postconditions>
	  <post>
	    <math>
	      <apply>
		<preserves-all-memory/>
	      </apply>
	    </math>
	  </post>
	</postconditions>
      </function>
      <function name="errline">
        <parameters>
          <par name="n" nr="1"/>
          <par name="k" nr="2"/>
          <par name="err" nr="3"/>
        </parameters>
	<preconditions>
	  <pre>
	    <math>
	      <apply>
		<not-null/>
		<ci>argv</ci>
	      </apply>
	    </math>
	  </pre>
	  <pre>
	    <math>
	      <apply>
		<valid-mem/>
		<ci>argv</ci>
	      </apply>
	    </math>
	  </pre>
	</preconditions>
	<postconditions>
	  <post>
	    <math>
	      <apply>
		<preserves-all-memory/>
	      </apply>
	    </math>
	  </post>
	</postconditions>
      </function>
      <function name="file_makename">
        <parameters>
          <par name="lemp" nr="1"/>
          <par name="suffix" nr="2"/>
        </parameters>
	<postconditions>
	  <post>
	    <math>
	      <apply>
		<allocation-base/>
		<return/>
	      </apply>
	    </math>
	  </post>
	  <post>
	    <math>
	      <apply>
		<not-null/>
		<return/>
	      </apply>
	    </math>
	  </post>
	  <post>
	    <math>
	      <apply>
		<preserves-all-memory/>
	      </apply>
	    </math>
	  </post>
	</postconditions>
      </function>
      <function name="file_open">
        <parameters>
          <par name="lemp" nr="1"/>
          <par name="suffix" nr="2"/>
          <par name="mode" nr="3"/>
        </parameters>
	<postconditions>
	  <post>
	    <math>
	      <apply>
		<initialized/>
		<apply>
		  <addressed-value/>
		  <return/>
		</apply>
	      </apply>
	    </math>
	  </post>
	</postconditions>
      </function>
      <function name="findbreak">
        <parameters>
          <par name="msg" nr="1"/>
          <par name="min" nr="2"/>
          <par name="max" nr="3"/>
        </parameters>
      </function>
      <function name="getstate">
        <parameters>
          <par name="lemp" nr="1"/>
        </parameters>
      </function>
      <function name="handleflags">
        <parameters>
          <par name="i" nr="1"/>
          <par name="err" nr="2"/>
        </parameters>
	<preconditions>
	  <pre>
	    <math>
	      <apply>
		<not-null/>
		<ci>op</ci>
	      </apply>
	    </math>
	  </pre>
	  <pre>
	    <math>
	      <apply>
		<valid-mem/>
		<ci>op</ci>
	      </apply>
	    </math>
	  </pre>
	  <pre>
	    <math>
	      <apply>
		<not-null/>
		<ci>argv</ci>
	      </apply>
	    </math>
	  </pre>
	  <pre>
	    <math>
	      <apply>
		<valid-mem/>
		<ci>argv</ci>
	      </apply>
	    </math>
	  </pre>
	</preconditions>
	<postconditions>
	  <post>
	    <math>
	      <apply>
		<preserves-all-memory/>
	      </apply>
	    </math>
	  </post>
	</postconditions>
      </function>
      <function name="handleswitch">
        <parameters>
          <par name="i" nr="1"/>
          <par name="err" nr="2"/>
        </parameters>
	<preconditions>
	  <pre>
	    <math>
	      <apply>
		<not-null/>
		<ci>op</ci>
	      </apply>
	    </math>
	  </pre>
	  <pre>
	    <math>
	      <apply>
		<valid-mem/>
		<ci>op</ci>
	      </apply>
	    </math>
	  </pre>
	  <pre>
	    <math>
	      <apply>
		<not-null/>
		<ci>argv</ci>
	      </apply>
	    </math>
	  </pre>
	  <pre>
	    <math>
	      <apply>
		<valid-mem/>
		<ci>argv</ci>
	      </apply>
	    </math>
	  </pre>
	</preconditions>
	<postconditions>
	  <post>
	    <math>
	      <apply>
		<preserves-all-memory/>
	      </apply>
	    </math>
	  </post>
	</postconditions>
      </function>
      <function name="has_destructor">
        <parameters>
          <par name="sp" nr="1"/>
          <par name="lemp" nr="2"/>
        </parameters>
	<postconditions>
	  <post>
	    <math>
	      <apply>
		<preserves-all-memory/>
	      </apply>
	    </math>
	  </post>
	</postconditions>
      </function>
      <function name="main">
        <parameters>
          <par name="argc" nr="1"/>
          <par name="argv" nr="2"/>
        </parameters>
      </function>
      <function name="memory_error">
        <parameters/>
	<postconditions>
	  <post>
	    <math>
	      <apply>
		<preserves-all-memory/>
	      </apply>
	    </math>
	  </post>
	</postconditions>
      </function>
      <function name="merge">
        <parameters>
          <par name="a" nr="1"/>
          <par name="b" nr="2"/>
          <par name="cmp" nr="3"/>
          <par name="offset" nr="4"/>
        </parameters>
	<postconditions>
	  <post>
	    <math>
	      <apply>
		<preserves-all-memory/>
	      </apply>
	    </math>
	  </post>
	</postconditions>
      </function>
      <function name="minimum_size_type">
        <parameters>
          <par name="lwr" nr="1"/>
          <par name="upr" nr="2"/>
        </parameters>
	<postconditions>
	  <post>
	    <math>
	      <apply>
		<not-null/>
		<return/>
	      </apply>
	    </math>
	  </post>
	  <post>
	    <math>
	      <apply>
		<preserves-all-memory/>
	      </apply>
	    </math>
	  </post>
	</postconditions>
      </function>
      <function name="msort">
        <parameters>
          <par name="list" nr="1"/>
          <par name="next" nr="2"/>
          <par name="cmp" nr="3"/>
        </parameters>
      </function>
      <function name="myassert">
        <parameters>
          <par name="file" nr="1"/>
          <par name="line" nr="2"/>
        </parameters>
	<postconditions>
	  <post>
	    <math>
	      <apply>
		<preserves-all-memory/>
	      </apply>
	    </math>
	  </post>
	</postconditions>
      </function>
      <function name="newconfig">
        <parameters/>
	<postconditions>
	  <post>
	    <math>
	      <apply>
		<not-null/>
		<return/>
	      </apply>
	    </math>
	  </post>
	  <post>
	    <math>
	      <apply>
		<preserves-all-memory/>
	      </apply>
	    </math>
	  </post>
	</postconditions>
      </function>
      <function name="parseonetoken">
        <parameters>
          <par name="psp" nr="1"/>
        </parameters>
      </function>
      <function name="pathsearch">
        <parameters>
          <par name="argv0" nr="1"/>
          <par name="name" nr="2"/>
          <par name="modemask" nr="3"/>
        </parameters>
	<postconditions>
	  <post>
	    <math>
	      <apply>
		<preserves-all-memory/>
	      </apply>
	    </math>
	  </post>
	</postconditions>
      </function>
      <function name="print_stack_union">
        <parameters>
          <par name="out" nr="1"/>
          <par name="lemp" nr="2"/>
          <par name="plineno" nr="3"/>
          <par name="mhflag___0" nr="4"/>
        </parameters>
      </function>
      <function name="resolve_conflict">
        <parameters>
          <par name="apx" nr="1"/>
          <par name="apy" nr="2"/>
          <par name="errsym" nr="3"/>
        </parameters>
	<postconditions>
	  <post>
	    <math>
	      <apply>
		<preserves-all-memory/>
	      </apply>
	    </math>
	  </post>
	</postconditions>
      </function>
      <function name="statecmp">
        <parameters>
          <par name="a" nr="1"/>
          <par name="b" nr="2"/>
        </parameters>
	<postconditions>
	  <post>
	    <math>
	      <apply>
		<preserves-all-memory/>
	      </apply>
	    </math>
	  </post>
	</postconditions>
      </function>
      <function name="statehash">
        <parameters>
          <par name="a" nr="1"/>
        </parameters>
	<postconditions>
	  <post>
	    <math>
	      <apply>
		<preserves-all-memory/>
	      </apply>
	    </math>
	  </post>
	</postconditions>
      </function>
      <function name="strhash">
        <parameters>
          <par name="x" nr="1"/>
        </parameters>
	<postconditions>
	  <post>
	    <math>
	      <apply>
		<preserves-all-memory/>
	      </apply>
	    </math>
	  </post>
	</postconditions>
      </function>
      <function name="tplt_open">
        <parameters>
          <par name="lemp" nr="1"/>
        </parameters>
	<postconditions>
	  <post>
	    <math>
	      <apply>
		<initialized/>
		<apply>
		  <addressed-value/>
		  <return/>
		</apply>
	      </apply>
	    </math>
	  </post>
	  <post>
	    <math>
	      <apply>
		<preserves-all-memory/>
	      </apply>
	    </math>
	  </post>
	</postconditions>
      </function>
      <function name="tplt_print">
        <parameters>
          <par name="out" nr="1"/>
          <par name="lemp" nr="2"/>
          <par name="str" nr="3"/>
          <par name="strln" nr="4"/>
          <par name="lineno" nr="5"/>
        </parameters>
	<postconditions>
	  <post>
	    <math>
	      <apply>
		<preserves-all-memory/>
	      </apply>
	    </math>
	  </post>
	</postconditions>
      </function>
      <function name="tplt_xfer">
        <parameters>
          <par name="name" nr="1"/>
          <par name="in" nr="2"/>
          <par name="out" nr="3"/>
          <par name="lineno" nr="4"/>
        </parameters>
	<postconditions>
	  <post>
	    <math>
	      <apply>
		<preserves-all-memory/>
	      </apply>
	    </math>
	  </post>
	</postconditions>
      </function>
    </functions>
  </cfile>
</c-analysis>
